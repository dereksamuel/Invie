{"version":3,"sources":["logo.svg","components/Heart.jsx","components/Portada.jsx","components/Guitarras.jsx","components/Footer.jsx","Invie.js","serviceWorker.js","store.js","index.js"],"names":["module","exports","Heart","className","style","this","props","Component","Portada","num","Array","fill","map","heart","index","operator","Math","floor","random","window","innerWidth","operator2","console","log","left","animationDelay","key","id","isAnimated","TransitionGroup","CSSTransition","classNames","timeout","logo","src","width","height","alt","menu","item","href","title","enter","exit","renderHeart","React","connect","state","Guitarras","guitarras","guitarra","image","name","feautures","Footer","App","Boolean","location","hostname","match","initialState","easter","Cheet","store","dispatch","type","update","payload","createStore","action","newprops","ReactDOM","render","StrictMode","Invie","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.55a10a43.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\n\nclass Heart extends Component {\n  render() {\n    return (\n      <div className=\"like is-liked\" style={this.props.style}></div>\n    );\n  }\n}\n\nexport default Heart;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport Heart from './Heart';\n\nfunction mapStateToProps(state) {\n  console.log(state);\n  return {\n    logo: state.logo,\n    menu: state.menu,\n    isAnimated: state.isAnimated\n  }\n}\n\nclass Portada extends React.Component {\n  renderHeart(num) {\n    const hearts = new Array(num).fill({});\n    return (\n      hearts.map((heart, index) => {\n        const operator = Math.floor((Math.random() * (window.innerWidth - 80))) + 0;\n        const operator2 = Math.floor((Math.random() * (10000 - 0))) + 0;\n        console.log(operator);\n        const style = {\n          left: operator + \"px\",\n          animationDelay: operator2 + \"ms\"\n        }\n        return (\n          <Heart key={index} style={style} />\n        );\n      })\n    );\n  }\n  render() {\n    return (\n      <section id=\"portada\" className={`portada background ${this.props.isAnimated}`}>\n        <header id=\"header\" className=\"header contenedor\">\n          <TransitionGroup>\n            <CSSTransition\n              classNames=\"logoWrap\"\n              timeout={1000}\n              key={this.props.logo}\n            >\n              <figure className=\"logotipo\">\n                <img src={this.props.logo} width=\"186\" height=\"60\" alt=\"Invie logotipo\"/>\n              </figure>\n            </CSSTransition>\n          </TransitionGroup>\n          <TransitionGroup>\n            <CSSTransition\n              classNames=\"showMenu\"\n              timeout={1000}\n              key={this.props.menu}\n            >\n              <nav className=\"menu\">\n                <ul>{ this.props.menu.map((item) => {\n                  return (\n                    <li><a href={item.href}>{item.title}</a></li>\n                  );\n                }) }</ul>\n              </nav>\n            </CSSTransition>\n          </TransitionGroup>\n        </header>\n        <TransitionGroup>\n          { !this.props.isAnimated &&\n            <CSSTransition\n              classNames=\"animationInOut\"\n              timeout={{ enter: 800, exit: 800 }}\n              key=\"portada\"\n            >\n                <div className=\"contenedor\">\n                  <h1 className=\"titulo\">Guitarras <span>invie</span>sibles</h1>\n                  <h3 className=\"title-a\">SÃ© la estrella de rock que siempre quisiste ser</h3>\n                  <a className=\"button\" href=\"#guitarras\">Conoce mas</a>\n                </div>\n            </CSSTransition>\n          }\n        </TransitionGroup>\n        {\n          this.props.isAnimated &&\n          this.renderHeart(100)\n        }\n      </section>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(Portada);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nfunction mapStateToProps(state) {\n  const { guitarras } = state;\n  return {\n    guitarras,\n  }\n}\n\nclass Guitarras extends Component {\n  render() {\n    return (\n      <section id=\"guitarras\" className=\"guitarras contenedor\">\n        <h2>Nuestras guitarras</h2>\n        {\n          this.props.guitarras.map((guitarra, index) => {\n            return (\n              <article className=\"guitarra\" key={index}>\n                {/* para contralar animaciones bien KEY */}\n                <TransitionGroup>\n                  <CSSTransition\n                    classNames=\"flickerImg\"\n                    timeout={500}\n                    key={guitarra.image}\n                  >\n                    <img\n                      className=\"guitarra-image\"\n                      width=\"350\"\n                      alt={guitarra.alt}\n                      src={guitarra.image}\n                    />\n                  </CSSTransition>\n                </TransitionGroup>\n                <TransitionGroup>\n                  <CSSTransition\n                    classNames=\"fade\"\n                    timeout={{ enter: 1000, exit: false }}\n                    key={guitarra.name}\n                  >\n                  <div className=\"contenedor-guitarra\">\n                    <h3 className=\"guitarra-name\">{guitarra.name}</h3>\n                    <ol>\n                      {guitarra.feautures.map((item, index) => {\n                        return (\n                          <li key={index}>{item}</li>\n                        );\n                      })}\n                    </ol>\n                  </div>\n                  </CSSTransition>\n                </TransitionGroup>\n              </article>\n            );\n          })\n        }\n      </section>\n    );\n  }\n}\n\n\nexport default connect(mapStateToProps)(Guitarras);\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n    return (\n      <footer className=\"footer\">\n      </footer>\n    );\n  }\n}\n\nexport default Footer;","import React, { Component } from 'react';\n\nimport Portada from './components/Portada';\nimport Guitarras from './components/Guitarras';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  render() {\n    return (\n      <section className=\"Invie\">\n        <Portada></Portada>\n        <Guitarras></Guitarras>\n        <Footer></Footer>\n      </section>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const acustica = 'https://github.com/LeonidasEsteban/invie-animated/blob/master/src/images/invie-acustica.png?raw=true';\nconst clasica = 'https://github.com/LeonidasEsteban/invie-animated/blob/master/src/images/invie-classic.png?raw=true';\nconst initialState = {\n  isAnimated: false,\n  menu: [\n    {\n      href: 'index.html',\n      title: 'Home'\n    },\n    {\n      href: '#guitarras',\n      title: 'Guitarras'\n    },\n    {\n      href: 'precios.html',\n      title: 'Precios'\n    },\n  ],\n  logo: 'https://github.com/LeonidasEsteban/invie-animated/blob/master/src/images/invie.png?raw=true',\n  guitarras: [\n    {\n      image: acustica,\n      alt: 'Invie acustic',\n      name: 'Invie AcÃºstica',\n      feautures: ['Estilo vintage', 'Madera pura', 'incluye estuche invisible']\n    },\n    {\n      image: clasica,\n      alt: 'Invie classic',\n      name: 'Invie ClÃ¡sica',\n      feautures: ['Estilo vintage', 'Liviana', 'Inicia tu camino como Rockstar']\n    }\n  ],\n}\n\nexport default initialState;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/invie.css';\nimport logo from './logo.svg';\nimport './css/animations.css';\nimport Invie from './Invie';\nimport * as serviceWorker from './serviceWorker';\nimport Cheet from 'cheet.js';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport initialState from './store';\n\nconst easterA = 'https://i.pinimg.com/originals/7a/d4/11/7ad4118a39a4fe7a933f8fcd891a7ae3.jpg';\nconst easterB = 'https://github.com/LeonidasEsteban/invie-animated/blob/master/src/images/easter-b.png?raw=true';\n\nconst easter = {\n  isAnimated: 'is-ok',\n  menu: [],\n  logo,\n  guitarras: [\n    {\n      image: easterA,\n      alt: 'Guitarra pink panther',\n      name: 'Invie Panther',\n      feautures: ['Listo para pinkearte', 'Aire rosa', 'chistes mudos']\n    },\n    {\n      image: easterB,\n      alt: 'Guitarra Ã¡nime',\n      name: 'Invie Ãnime',\n      feautures: ['Estilo vintage', 'Liviana', 'Inicia tu camino como Rockstar']\n    }\n  ]\n}\n\nCheet('i n v i e', () => {\n  store.dispatch({\n    type: update,\n    payload: {\n      props: easter\n    }\n  });\n});\n\nCheet('g o b a c k', () => {\n  store.dispatch({\n    type: update,\n    payload: {\n      props: initialState\n    }\n  });\n});\n\nconst update = 'UPDATE_PROPS';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case update:\n      const newprops = action.payload.props;\n      return { ...state, ...newprops }\n    default:\n      return state; //TODO: El error estuvo aquÃ­ <= por el valor por defecto\n  }\n}\n\n\n\nconst store = createStore(reducer, initialState);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Invie />\n    </Provider>,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}